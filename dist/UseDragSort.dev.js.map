{"version":3,"file":"UseDragSort.dev.js","sources":["../src/core/log.js","../src/core/mouse-handler.js","../src/core/mouse-dragsort.js","../src/core/mouse-scroll.js","../src/index.js"],"sourcesContent":["export const types = {};\r\n\r\nexport const openLog = (type) => {\r\n  types[type] = true;\r\n};\r\n\r\nexport const cloneLog = (type) => {\r\n  types[type] = false;\r\n};\r\n\r\nexport const printLog = (message, type) => {\r\n  if (types[type] || type === undefined) {\r\n    console.log(message);\r\n  }\r\n};\r\n","import { printLog, openLog } from './log';\n\nopenLog('mouse-handler');\n\n// 事件\nconst EVENT_TYPE = {\n  click: 'click', // 点击事件\n  press: 'press', // 长按事件\n  pressEnd: 'pressEnd', // 长按结束\n  move: 'move' // 移动\n};\n\nconst ASSERT_MOVE = 20; // 断言长按与移动,px\nconst ASSERT_PRESS = 300; // 断言点击长按,ms\n\n// 监听一个元素内的鼠标事件\nexport default class MouseHandler {\n  constructor(options) {\n    if (options.el instanceof Node) this.el = options.el;\n    else throw Error('el must be a Element');\n    this.$options = options; // 内含一系列钩子\n    this.initData();\n    /*\n     * 每次鼠标动作都有3个状态\n     * 按下、移动、抬起（down，move，up）\n     * 通过分析动作，确定鼠标操作的场景，并抛出一系列的钩子\n     * --------------------\n     * 场景包括:\n     * 点击 * 长按 * 移动 * 上滑 * 下滑 * 左->右 * 右->左 * 顶部边缘下滑 * 底部边缘上滑 * 左边缘右滑 * 右边缘左滑\n     * --------------------\n     * 钩子包括:\n     * click * press * pressEnd * toTop * toBottom * leftToRight * rightToleft * topEdge * bottomEdge * leftEdge * rightEdge\n     * --------------------\n     * 现在先分析 长按->拖拽 场景\n     * */\n    document.addEventListener('mousedown', this.mousedown.bind(this));\n    document.addEventListener('mousemove', this.mousemove.bind(this));\n    // this.el.addEventListener('mouseup', this.mouseup.bind(this));\n    document.addEventListener('mouseup', this.mouseup.bind(this));\n  }\n\n  // 初始化值\n  initData() {\n    this.scene = null; // 当前动作场景\n    this.action = null; // 动作状态\n    this.downtime = 0; // 按下时的时间\n    this.uptime = 0; //抬起的时间\n    this.startCoor = { x: 0, y: 0 }; // 按下时鼠标位置\n    this.moveCoor = { x: 0, y: 0 }; // 移动时鼠标位置\n    this.endCoor = { x: 0, y: 0 }; // 放开时时鼠标位置\n    this.stop = false;\n  }\n\n  // 鼠标按下\n  mousedown(e) {\n    if (this.stop) e.stopPropagation();\n    this.setAction('down'); // 鼠标按下\n    this.downtime = new Date().getTime();\n    this.startCoor = { x: e.x, y: e.y };\n    setTimeout(() => {\n      // 当超过断言值时\n      printLog('action------------------------' + this.action, 'mouse-handler');\n      if (this.action && this.action !== 'up' && this.assertPressOrMove().isPress) {\n        this.setScene('press');\n        if (typeof this.press === 'function') this.press(e);\n      }\n    }, this.$options.pressDelay || ASSERT_PRESS);\n  }\n\n  // 鼠标移动\n  mousemove(e) {\n    if (this.stop) e.stopPropagation();\n    this.moveCoor = { x: e.x, y: e.y };\n    // this.setAction('move'); // 鼠标按下\n    if (typeof this.move === 'function') this.move(e, this.startCoor, this.moveCoor);\n  }\n\n  // 鼠标抬起\n  mouseup(e) {\n    if (this.stop) e.stopPropagation();\n    this.setAction('up'); // 鼠标按下\n    this.uptime = new Date().getTime();\n    const during = this.uptime - this.downtime;\n    this.endCoor = { x: e.x, y: e.y };\n    // 断言是点击还是长按：scene未被设置，且点击间隔少于 ASSERT_PRESS\n    if (during <= (this.$options.pressDelay || ASSERT_PRESS)) {\n      this.setScene('click');\n      if (typeof this.click === 'function') this.click(e);\n    } else if (this.assertPressOrMove().isPress) {\n      this.setScene('pressEnd');\n      if (typeof this.pressEnd === 'function') this.pressEnd(e);\n    }\n    this.eventOver();\n  }\n\n  // 断言当前是长按还是移动，\n  assertPressOrMove() {\n    const _x = Math.abs(this.startCoor.x - this.moveCoor.x);\n    const _y = Math.abs(this.startCoor.y - this.moveCoor.y);\n    let isPress = false;\n    if (_x <= ASSERT_MOVE && _y <= ASSERT_MOVE) {\n      isPress = true;\n    }\n    return { isPress, isMove: !isPress };\n  }\n\n  // 设置当前场景\n  setScene(scene) {\n    printLog('---------------------' + scene, 'mouse-handler');\n    this.scene = scene;\n  }\n\n  // 设置当前动作\n  setAction(action) {\n    printLog('---------------------' + action, 'mouse-handler');\n    this.action = action;\n  }\n\n  // 一个事件的结束\n  eventOver(e) {\n    if (typeof this.over === 'function') this.over(e);\n    this.initData();\n  }\n}\n","import { printLog, openLog, deepCopy } from './log';\nimport MouseHandler from './mouse-handler';\n\nopenLog('move-block');\n\nexport default class UseDragSort {\n  /*\n   * options只需要传入 id, wrapHeight: 480, domWidth: 480, domHeight: Y, direction: 'y',\n   * id元素布局必需是非static，内部项的style尽量为null\n   * 所有移动块上需设置name=\"move-block\" :move-index=\"key\"\n   * 当进行布局时，将会是一个非常耗费性能的操作\n   * */\n  constructor(options) {\n    /*\n     * 这里仅获取当前调用组件内的元素\n     * 若是其他地方有重复组件（如首屏滑块），需要将排序数据存入store\n     * */\n    if (options.el instanceof Node) this.el = options.el;\n    else throw Error('el must be a Element');\n    this.currentDom = null; // 当前变动位置的元素\n    this.currentKey = null; // 当前变动位置的元素索引\n    // 移动中排序定时器\n    this.moveTimer = null;\n    /*\n     * 实例化鼠标事件\n     * */\n    this.initMouse(options);\n    // 获取与重置数据源\n    this.getList = options.getList;\n    this.resetList = options.resetList;\n    // 移动中的样式\n    this.activeClass = options.activeClass || '';\n    this.currentBaseClass = '';\n  }\n\n  initMouse(options) {\n    let press = false;\n    this.scrollBody = new MouseHandler(options);\n    // 长按动作\n    this.scrollBody.press = (e) => {\n      press = true;\n      this.scrollBody.stop = true;\n      this.initDomList(e); // 初始化DomList\n    };\n    // 移动动作\n    this.scrollBody.move = (e, start, end) => {\n      // 监听移动，并变更移动块位置\n      if (press && this.currentKey !== null) {\n        this.moveTimerHandler();\n        this.setMovePosition(start, end);\n      }\n    };\n    // 结束动作\n    this.scrollBody.over = (e) => {\n      if (press && this.currentKey !== null) {\n        // 当鼠标松开时执行的方法\n        this.moveOver();\n      }\n      press = false;\n      this.scrollBody.stop = false;\n    };\n  }\n\n  /*\n   * 初始化元素的位置信息\n   * */\n  initDomList(e) {\n    /*\n     * 设置需要进行排序的doms\n     * */\n    this.domList = Array.prototype.map.call(\n      this.el.querySelectorAll('[name=move-block]'),\n      (item) => item\n    );\n    /**\n     * 注意：这里的positions与domList的顺序可能不一致（根据y、x轴进行排序）\n     */\n    this.positions = this.domList.map((dom, key) => {\n      const parent = dom.parentElement;\n      const top = parent.offsetTop;\n      const left = parent.offsetLeft;\n      const width = dom.clientWidth;\n      const height = dom.clientHeight;\n      const unid = dom.getAttribute('unid');\n      return {\n        unid,\n        key,\n        top,\n        left,\n        width,\n        height,\n        scopeX: [left, left + width],\n        scopeY: [top, top + height],\n        translate: {\n          x: 0,\n          y: 0\n        }\n      };\n    });\n    this.resetPositions();\n    this.findElement(e.getPath());\n    this.setDomPosition();\n  }\n\n  /*\n   * 找到当前选中的移动元素\n   * */\n  findElement(path) {\n    path.forEach((dom, key) => {\n      if (dom.getAttribute && dom.getAttribute('name') === 'move-block') {\n        this.currentDom = dom;\n        this.currentBaseClass = dom.getAttribute('class');\n        this.currentKey = this.positions.findIndex(\n          (v) => v.key === Number(dom.getAttribute('move-index'))\n        );\n        this.currentDom.setAttribute('class', this.currentBaseClass + ' ' + this.activeClass);\n      }\n    });\n  }\n\n  /*\n   * 设置滑动位置\n   * */\n  setMovePosition(start, end) {\n    const moveX = end.x - start.x;\n    const moveY = end.y - start.y;\n    const currentXY = this.positions[this.currentKey];\n    const translate = currentXY.moving || currentXY.translate;\n    currentXY.moveX = moveX;\n    currentXY.moveY = moveY;\n    this.currentDom.setAttribute(\n      'style',\n      `\n      position:absolute;\n      top:0;\n      left:0;\n      transform:translate(${translate.x + moveX}px, ${translate.y + moveY}px);\n      z-index: 100;\n    `\n    );\n  }\n\n  /*\n   * 设置开始移动doms位置\n   * */\n  setDomPosition() {\n    if (this.currentKey === null) return;\n    const currentXY = this.positions[this.currentKey];\n    const translate = currentXY.translate;\n    this.currentDom.setAttribute(\n      'style',\n      `\n      position:absolute;\n      top:0;\n      left:0;\n      transform:translate(${translate.x}px, ${translate.y}px);\n      z-index: 100;\n    `\n    );\n  }\n\n  /**\n   * 解放元素\n   */\n  setFreeElement() {\n    const currentXY = this.positions[this.currentKey];\n    const translate = currentXY.translate;\n    delete currentXY.moving;\n    const style = `\n      transform:translate(${translate.x}px, ${translate.y}px);\n    `;\n    this.currentDom.setAttribute(\n      'style',\n      `\n      ${style}\n      position:absolute;\n      top:0;\n      left:0;\n      transition: all 0.5s;\n      z-index: 100;\n    `\n    );\n    setTimeout(() => {\n      this.currentDom.setAttribute('class', this.currentBaseClass);\n      this.currentDom.setAttribute('style', style);\n    }, 500);\n  }\n\n  /**\n   * 记录移动过程中的信息，并设置定时器，处理排序任务\n   */\n  moveTimerHandler(position) {\n    if (this.moveTimer) clearTimeout(this.moveTimer);\n    this.moveTimer = setTimeout(() => {\n      this.resetQuene();\n    }, 300);\n  }\n\n  /**\n   * 当鼠标停下超过500毫秒，将会判断是否触发排序\n   */\n  resetQuene() {\n    const currentXY = this.positions[this.currentKey];\n    const currentTranslate = currentXY.moving || currentXY.translate;\n    const currentX = currentXY.left + currentXY.moveX + currentTranslate.x;\n    const currentY = currentXY.top + currentXY.moveY + currentTranslate.y;\n    const currentKey = this.currentKey;\n    this.positions.forEach((position, key) => {\n      if (currentKey !== key) {\n        const translate = position.translate;\n        const _x = Math.abs(position.left + translate.x - currentX);\n        const _y = Math.abs(position.top + translate.y - currentY);\n        if (_x <= 30 && _y <= 30) {\n          printLog('重新排序：' + this.currentKey + '---to---' + key, 'move-block');\n          // 当往前排时，替换的元素往前挪\n          /** 对positions重新排序 **/\n          const moveInfo = this.cacheChangePositions(currentKey, key, this.positions);\n          moveInfo.forEach((move) => {\n            printLog(move, 'move-block');\n            if (move.moving) this.positions[move.from].moving = move.moving;\n            this.positions[move.from].translate = move.translate;\n          });\n          // 排序动作\n          this.resetQueneDom();\n          // 重新对positions进行排序\n          this.currentKey = key;\n          this.resetPositions();\n        }\n      }\n    });\n  }\n\n  /**\n   * 缓存位置变更信息\n   */\n  cacheChangePositions(currentKey, key, positions) {\n    let moveInfo = [];\n    moveInfo.push({\n      from: currentKey,\n      to: key,\n      translate: { ...this.domToPosition(positions[currentKey], positions[key]) },\n      moving: { ...(positions[currentKey].moving || positions[currentKey].translate) }\n    });\n    if (currentKey < key) {\n      // 当往前排时，currentKey - key 的元素往前挪\n      for (let i = currentKey + 1; i <= key; i++) {\n        moveInfo.push({\n          from: i,\n          to: i - 1,\n          translate: { ...this.domToPosition(positions[i], positions[i - 1]) }\n        });\n      }\n    } else {\n      // 当往后排时，key - currentKey 的元素往后挪\n      for (let i = key; i < currentKey; i++) {\n        moveInfo.push({\n          from: i,\n          to: i - 1,\n          translate: { ...this.domToPosition(positions[i], positions[i + 1]) }\n        });\n      }\n    }\n    return moveInfo;\n  }\n\n  /**\n   * 移动一个元素到后一个的位置\n   */\n  domToPosition(p1, p2) {\n    const x = p2.left + p2.translate.x - p1.left;\n    const y = p2.top + p2.translate.y - p1.top;\n    return { x, y };\n  }\n\n  /**\n   * 针对重新排的position设置位置\n   * 注：dom顺序不变，绝对定位变了\n   */\n  resetQueneDom() {\n    const currentKey = this.currentKey;\n    this.positions.forEach((position, key) => {\n      if (currentKey === key) return;\n      const dom = this.domList[position.key];\n      const translate = position.translate;\n      const style = `\n        transform:translate(${translate.x}px, ${translate.y}px);\n      `;\n      dom.setAttribute(\n        'style',\n        `${style}\n        transition: all 0.5s;\n      `\n      );\n      setTimeout(() => {\n        dom.setAttribute('style', style);\n      }, 500);\n    });\n  }\n\n  /**\n   * 重新对positions进行排序\n   * 首先根据纵坐标排序，再进行横坐标排序\n   * 排序方式，从小到大\n   */\n  resetPositions() {\n    this.positions = this.positions.sort(function (a, b) {\n      const ayx =\n        ('0000000000' + (a.top + a.translate.y)).slice(-10) +\n        ('0000000000' + (a.left + a.translate.x)).slice(-10);\n      const byx =\n        ('0000000000' + (b.top + b.translate.y)).slice(-10) +\n        ('0000000000' + (b.left + b.translate.x)).slice(-10);\n      return ayx > byx ? 1 : -1;\n    });\n  }\n\n  /**\n   * 设置松开事件\n   */\n  moveOver() {\n    this.setFreeElement();\n    setTimeout(() => {\n      this.resortdom();\n      // 对数据进行清空\n      this.resetData();\n    }, 500);\n  }\n\n  /**\n   * 对dom进行重写排序\n   */\n  resortdom() {\n    let result = [];\n    let list = this.getList();\n    this.positions.forEach((position, key) => {\n      result[key] = list[position.key];\n    });\n    this.domList.forEach((dom) => {\n      dom.setAttribute('style', '');\n    });\n    this.resetList(result);\n  }\n\n  /**\n   * 清空数据\n   */\n  resetData() {\n    clearTimeout(this.moveTimer);\n    this.moveTimer = null;\n    this.positions = null;\n    this.currentKey = null;\n    this.currentDom = null;\n    this.domList = [];\n  }\n}\n","import { printLog, openLog, deepCopy } from './log';\nimport MouseHandler from './mouse-handler';\n\nopenLog('move-block');\n\nexport default class UseScroll {\n  /*\n   * options只需要传入 id, wrapHeight: 480, domWidth: 480, domHeight: Y, direction: 'y',\n   * id元素布局必需是非static，内部项的style尽量为null\n   * 所有移动块上需设置name=\"move-block\" :move-index=\"key\"\n   * 当进行布局时，将会是一个非常耗费性能的操作\n   * */\n  constructor(options) {\n    /*\n     * 这里仅获取当前调用组件内的元素\n     * 若是其他地方有重复组件（如首屏滑块），需要将排序数据存入store\n     * */\n    if (options.el instanceof Node) this.el = options.el;\n    else throw Error('el must be a Element');\n    /*\n     * 实例化鼠标事件\n     * */\n    this.initMouse(options);\n  }\n\n  initMouse(options) {\n    this.scrollBody = new MouseHandler(options);\n    let isScroll = null;\n    let startY = 0;\n    // 移动动作\n    this.scrollBody.move = (e, start, end) => {\n      // 监听移动，并变更移动块位置\n      // 当纵向 / 横向 移动比例超过3，且纵向长度超过30px，即认定开始滚动\n      const x = end.x - start.x;\n      const y = end.y - start.y;\n      console.log(y);\n      if (isScroll === null) {\n        const ratio = Math.abs(y) / Math.abs(x);\n        if (ratio > 3 && y > 30) {\n          isScroll = true;\n          startY = y;\n        }\n      }\n      if (isScroll) {\n        this.setDomScroll(y - startY);\n      }\n    };\n  }\n\n  /*\n   * 设置元素的位置信息\n   * */\n  setDomScroll(y) {\n    this.el.setAttribute('style', `transform:translate(0, ${y}px)`);\n  }\n}\n","import UseDragSort from './core/mouse-dragsort';\nimport UseScroll from './core/mouse-scroll';\n\n/*\n * 为mixpad的鼠标事件添加获取path的方法\n * */\nMouseEvent.prototype.getPath = function () {\n  if (this.path) {\n    return this.path;\n  } else {\n    const target = this.target;\n    let path = [target];\n    if (target instanceof Node) {\n      let parent = target.parentElement;\n      while (parent) {\n        path.push(parent);\n        parent = parent.parentElement;\n      }\n      return path;\n    } else {\n      return path;\n    }\n  }\n};\n\nexport default {\n  UseScroll,\n  UseDragSort\n};\n"],"names":["types","openLog","type","printLog","message","undefined","console","log","ASSERT_MOVE","ASSERT_PRESS","MouseHandler","options","el","Node","Error","$options","initData","document","addEventListener","mousedown","bind","mousemove","mouseup","scene","action","downtime","uptime","startCoor","x","y","moveCoor","endCoor","stop","e","stopPropagation","setAction","Date","getTime","setTimeout","assertPressOrMove","isPress","setScene","press","pressDelay","move","during","click","pressEnd","eventOver","_x","Math","abs","_y","isMove","over","UseDragSort","currentDom","currentKey","moveTimer","initMouse","getList","resetList","activeClass","currentBaseClass","scrollBody","initDomList","start","end","moveTimerHandler","setMovePosition","moveOver","domList","Array","prototype","map","call","querySelectorAll","item","positions","dom","key","parent","parentElement","top","offsetTop","left","offsetLeft","width","clientWidth","height","clientHeight","unid","getAttribute","scopeX","scopeY","translate","resetPositions","findElement","getPath","setDomPosition","path","forEach","findIndex","v","Number","setAttribute","moveX","moveY","currentXY","moving","style","position","clearTimeout","resetQuene","currentTranslate","currentX","currentY","moveInfo","cacheChangePositions","from","resetQueneDom","push","to","domToPosition","i","p1","p2","sort","a","b","ayx","slice","byx","setFreeElement","resortdom","resetData","result","list","UseScroll","isScroll","startY","ratio","setDomScroll","MouseEvent","target"],"mappings":"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"}