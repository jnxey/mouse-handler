{"version":3,"file":"UseMoveList.dev.js","sources":["../src/core/utils/utils.js","../src/core/mouse-handler.js","../src/core/move-block.js"],"sourcesContent":["export const types = {};\r\n\r\nexport const openLog = (type) => {\r\n  types[type] = true;\r\n};\r\n\r\nexport const cloneLog = (type) => {\r\n  types[type] = false;\r\n};\r\n\r\nexport const printLog = (message, type) => {\r\n  if (types[type] || type === undefined) {\r\n    console.log(message);\r\n  }\r\n};\r\n\r\n/**\r\n * @module deepCopy\r\n * @description 对象深拷贝\r\n * @param {object} target - 要拷贝的对象\r\n * @return {object} 返回拷贝后的对象\r\n */\r\nexport const deepCopy = function (target) {\r\n  function deepCopyPro(tt) {\r\n    if (typeof tt !== 'object') return;\r\n    let newObj = tt instanceof Array ? [] : {};\r\n    for (let item in tt) {\r\n      if (tt.hasOwnProperty(item)) {\r\n        newObj[item] =\r\n          typeof tt[item] === 'object' && tt[item] !== null ? deepCopy(tt[item]) : tt[item];\r\n      }\r\n    }\r\n    return newObj;\r\n  }\r\n  let res = deepCopyPro(target);\r\n  return res;\r\n};\r\n","import { printLog, openLog } from './utils/utils';\r\n\r\nopenLog('mouse-handler');\r\n\r\n// 事件\r\nconst EVENT_TYPE = {\r\n  click: 'click', // 点击事件\r\n  press: 'press', // 长按事件\r\n  pressEnd: 'pressEnd', // 长按结束\r\n  move: 'move' // 移动\r\n};\r\n\r\nconst ASSERT_MOVE = 20; // 断言长按与移动,px\r\nconst ASSERT_PRESS = 300; // 断言点击长按,ms\r\n\r\n// 监听一个元素内的鼠标事件\r\nexport default class MouseHandler {\r\n  constructor(options) {\r\n    if (options.el instanceof Node) this.el = options.el;\r\n    else throw Error('el must be a Element');\r\n    this.$options = options; // 内含一系列钩子\r\n    this.initData();\r\n    /*\r\n     * 每次鼠标动作都有3个状态\r\n     * 按下、移动、抬起（down，move，up）\r\n     * 通过分析动作，确定鼠标操作的场景，并抛出一系列的钩子\r\n     * --------------------\r\n     * 场景包括:\r\n     * 点击 * 长按 * 移动 * 上滑 * 下滑 * 左->右 * 右->左 * 顶部边缘下滑 * 底部边缘上滑 * 左边缘右滑 * 右边缘左滑\r\n     * --------------------\r\n     * 钩子包括:\r\n     * click * press * pressEnd * toTop * toBottom * leftToRight * rightToleft * topEdge * bottomEdge * leftEdge * rightEdge\r\n     * --------------------\r\n     * 现在先分析 长按->拖拽 场景\r\n     * */\r\n    document.addEventListener('mousedown', this.mousedown.bind(this));\r\n    document.addEventListener('mousemove', this.mousemove.bind(this));\r\n    // this.el.addEventListener('mouseup', this.mouseup.bind(this));\r\n    document.addEventListener('mouseup', this.mouseup.bind(this));\r\n  }\r\n\r\n  // 初始化值\r\n  initData() {\r\n    this.scene = null; // 当前动作场景\r\n    this.action = null; // 动作状态\r\n    this.downtime = 0; // 按下时的时间\r\n    this.uptime = 0; //抬起的时间\r\n    this.startCoor = { x: 0, y: 0 }; // 按下时鼠标位置\r\n    this.moveCoor = { x: 0, y: 0 }; // 移动时鼠标位置\r\n    this.endCoor = { x: 0, y: 0 }; // 放开时时鼠标位置\r\n    this.stop = false;\r\n  }\r\n\r\n  // 鼠标按下\r\n  mousedown(e) {\r\n    if (this.stop) e.stopPropagation();\r\n    this.setAction('down'); // 鼠标按下\r\n    this.downtime = new Date().getTime();\r\n    this.startCoor = { x: e.x, y: e.y };\r\n    setTimeout(() => {\r\n      // 当超过断言值时\r\n      printLog('action------------------------' + this.action, 'mouse-handler');\r\n      if (this.action && this.action !== 'up' && this.assertPressOrMove().isPress) {\r\n        this.setScene('press');\r\n        if (typeof this.press === 'function') this.press(e);\r\n      }\r\n    }, this.$options.pressDelay || ASSERT_PRESS);\r\n  }\r\n\r\n  // 鼠标移动\r\n  mousemove(e) {\r\n    if (this.stop) e.stopPropagation();\r\n    this.moveCoor = { x: e.x, y: e.y };\r\n    // this.setAction('move'); // 鼠标按下\r\n    if (typeof this.move === 'function') this.move(e, this.startCoor, this.moveCoor);\r\n  }\r\n\r\n  // 鼠标抬起\r\n  mouseup(e) {\r\n    if (this.stop) e.stopPropagation();\r\n    this.setAction('up'); // 鼠标按下\r\n    this.uptime = new Date().getTime();\r\n    const during = this.uptime - this.downtime;\r\n    this.endCoor = { x: e.x, y: e.y };\r\n    // 断言是点击还是长按：scene未被设置，且点击间隔少于 ASSERT_PRESS\r\n    if (during <= (this.$options.pressDelay || ASSERT_PRESS)) {\r\n      this.setScene('click');\r\n      if (typeof this.click === 'function') this.click(e);\r\n    } else if (this.assertPressOrMove().isPress) {\r\n      this.setScene('pressEnd');\r\n      if (typeof this.pressEnd === 'function') this.pressEnd(e);\r\n    }\r\n    this.eventOver();\r\n  }\r\n\r\n  // 断言当前是长按还是移动，\r\n  assertPressOrMove() {\r\n    const _x = Math.abs(this.startCoor.x - this.moveCoor.x);\r\n    const _y = Math.abs(this.startCoor.y - this.moveCoor.y);\r\n    let isPress = false;\r\n    if (_x <= ASSERT_MOVE && _y <= ASSERT_MOVE) {\r\n      isPress = true;\r\n    }\r\n    return { isPress, isMove: !isPress };\r\n  }\r\n\r\n  // 设置当前场景\r\n  setScene(scene) {\r\n    printLog('---------------------' + scene, 'mouse-handler');\r\n    this.scene = scene;\r\n  }\r\n\r\n  // 设置当前动作\r\n  setAction(action) {\r\n    printLog('---------------------' + action, 'mouse-handler');\r\n    this.action = action;\r\n  }\r\n\r\n  // 一个事件的结束\r\n  eventOver(e) {\r\n    if (typeof this.over === 'function') this.over(e);\r\n    this.initData();\r\n  }\r\n}\r\n","import { printLog, openLog, deepCopy } from './utils/utils';\r\nimport MouseHandler from './mouse-handler';\r\n\r\nopenLog('move-block');\r\n\r\nexport default class UseMoveList {\r\n  /*\r\n   * options只需要传入 id, wrapHeight: 480, domWidth: 480, domHeight: Y, direction: 'y',\r\n   * id元素布局必需是非static，内部项的style尽量为null\r\n   * 所有移动块上需设置name=\"move-block\" :move-index=\"key\"\r\n   * 当进行布局时，将会是一个非常耗费性能的操作\r\n   * */\r\n  constructor(options) {\r\n    /*\r\n     * 这里仅获取当前调用组件内的元素\r\n     * 若是其他地方有重复组件（如首屏滑块），需要将排序数据存入store\r\n     * */\r\n    if (options.el instanceof Node) this.el = options.el;\r\n    else throw Error('el must be a Element');\r\n    this.currentDom = null; // 当前变动位置的元素\r\n    this.currentKey = null; // 当前变动位置的元素索引\r\n    // 移动中排序定时器\r\n    this.moveTimer = null;\r\n    /*\r\n     * 设置需要进行排序的doms\r\n     * 若是没有传入domlist，将会去wrap内的子元素\r\n     * */\r\n    if (options.domList instanceof Array) {\r\n      this.domList = options.domList;\r\n    } else {\r\n      this.domList = Array.prototype.map.call(\r\n        this.el.querySelectorAll('[name=move-block]'),\r\n        (item) => item\r\n      );\r\n    }\r\n    delete options.domList;\r\n    /*\r\n     * 实例化鼠标事件\r\n     * */\r\n    this.initMouse(options);\r\n  }\r\n\r\n  initMouse(options) {\r\n    let press = false;\r\n    this.scrollBody = new MouseHandler(options);\r\n    // 长按动作\r\n    this.scrollBody.press = (e) => {\r\n      press = true;\r\n      this.scrollBody.stop = true;\r\n      this.initDomList(e); // 初始化DomList\r\n    };\r\n    // 移动动作\r\n    this.scrollBody.move = (e, start, end) => {\r\n      // 监听移动，并变更移动块位置\r\n      if (press) {\r\n        this.moveTimerHandler();\r\n        this.setMovePosition(start, end);\r\n      }\r\n    };\r\n    // 结束动作\r\n    this.scrollBody.over = (e) => {\r\n      if (press) {\r\n        // 当鼠标松开时执行的方法\r\n        this.moveOver();\r\n      }\r\n      press = false;\r\n      this.scrollBody.stop = false;\r\n    };\r\n  }\r\n\r\n  /*\r\n   * 初始化元素的位置信息\r\n   * */\r\n  initDomList(e) {\r\n    /**\r\n     * 注意：这里的positions与domList的顺序可能不一致（根据y、x轴进行排序）\r\n     */\r\n    if (!this.positions) {\r\n      this.positions = this.domList.map((dom, key) => {\r\n        const parent = dom.parentElement;\r\n        const top = parent.offsetTop;\r\n        const left = parent.offsetLeft;\r\n        const width = dom.clientWidth;\r\n        const height = dom.clientHeight;\r\n        const unid = dom.getAttribute('unid');\r\n        return {\r\n          unid,\r\n          key,\r\n          top,\r\n          left,\r\n          width,\r\n          height,\r\n          scopeX: [left, left + width],\r\n          scopeY: [top, top + height],\r\n          translate: {\r\n            x: 0,\r\n            y: 0\r\n          }\r\n        };\r\n      });\r\n      this.resetPositions();\r\n    }\r\n    this.findElement(e.path);\r\n    this.setDomPosition();\r\n  }\r\n\r\n  /*\r\n   * 找到当前选中的移动元素\r\n   * */\r\n  findElement(path) {\r\n    path.forEach((dom, key) => {\r\n      if (dom.getAttribute && dom.getAttribute('name') === 'move-block') {\r\n        this.currentDom = dom;\r\n        this.currentKey = this.positions.findIndex(\r\n          (v) => v.key === Number(dom.getAttribute('move-index'))\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  /*\r\n   * 设置滑动位置\r\n   * */\r\n  setMovePosition(start, end) {\r\n    const moveX = end.x - start.x;\r\n    const moveY = end.y - start.y;\r\n    const currentXY = this.positions[this.currentKey];\r\n    const translate = currentXY.moving || currentXY.translate;\r\n    currentXY.moveX = moveX;\r\n    currentXY.moveY = moveY;\r\n    this.currentDom.setAttribute(\r\n      'style',\r\n      `\r\n      border-color:red;\r\n      position:absolute;\r\n      top:0;\r\n      left:0;\r\n      transform:translate(${translate.x + moveX}px, ${translate.y + moveY}px);\r\n      z-index: 100;\r\n    `\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 设置松开事件\r\n   */\r\n  moveOver() {\r\n    if (this.moveTimer) clearTimeout(this.moveTimer);\r\n    this.setFreeElement();\r\n  }\r\n\r\n  /*\r\n   * 设置开始移动doms位置\r\n   * */\r\n  setDomPosition() {\r\n    const currentXY = this.positions[this.currentKey];\r\n    const translate = currentXY.translate;\r\n    this.currentDom.setAttribute(\r\n      'style',\r\n      `\r\n      border-color:red;\r\n      position:absolute;\r\n      top:0;\r\n      left:0;\r\n      transform:translate(${translate.x}px, ${translate.y}px);\r\n      z-index: 100;\r\n    `\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 解放元素\r\n   */\r\n  setFreeElement() {\r\n    const currentXY = this.positions[this.currentKey];\r\n    const translate = currentXY.translate;\r\n    delete currentXY.moving;\r\n    const style = `\r\n      transform:translate(${translate.x}px, ${translate.y}px);\r\n    `;\r\n    this.currentDom.setAttribute(\r\n      'style',\r\n      `\r\n      ${style}\r\n      border-color:red;\r\n      position:absolute;\r\n      top:0;\r\n      left:0;\r\n      transition: all 0.5s;\r\n      z-index: 100;\r\n    `\r\n    );\r\n    setTimeout(() => {\r\n      this.currentDom.setAttribute('style', style);\r\n    }, 500);\r\n  }\r\n\r\n  /**\r\n   * 记录移动过程中的信息，并设置定时器，处理排序任务\r\n   */\r\n  moveTimerHandler(position) {\r\n    if (this.moveTimer) clearTimeout(this.moveTimer);\r\n    this.moveTimer = setTimeout(() => {\r\n      this.resetQuene();\r\n    }, 500);\r\n  }\r\n\r\n  /**\r\n   * 当鼠标停下超过500毫秒，将会判断是否触发排序\r\n   */\r\n  resetQuene() {\r\n    const currentXY = this.positions[this.currentKey];\r\n    const currentTranslate = currentXY.moving || currentXY.translate;\r\n    const currentX = currentXY.left + currentXY.moveX + currentTranslate.x;\r\n    const currentY = currentXY.top + currentXY.moveY + currentTranslate.y;\r\n    const currentKey = this.currentKey;\r\n    this.positions.forEach((position, key) => {\r\n      if (currentKey !== key) {\r\n        const translate = position.translate;\r\n        const _x = Math.abs(position.left + translate.x - currentX);\r\n        const _y = Math.abs(position.top + translate.y - currentY);\r\n        if (_x <= 30 && _y <= 30) {\r\n          printLog('重新排序：' + this.currentKey + '---to---' + key, 'move-block');\r\n          // 当往前排时，替换的元素往前挪\r\n          /** 对positions重新排序 **/\r\n          let moveInfo = [];\r\n          moveInfo.push({\r\n            from: currentKey,\r\n            to: key,\r\n            translate: { ...this.domToPosition(this.positions[currentKey], this.positions[key]) },\r\n            moving: { ...this.positions[currentKey].translate }\r\n          });\r\n          if (currentKey < key) {\r\n            for (let i = currentKey + 1; i <= key; i++) {\r\n              moveInfo.push({\r\n                from: i,\r\n                to: i - 1,\r\n                translate: { ...this.domToPosition(this.positions[i], this.positions[i - 1]) }\r\n              });\r\n            }\r\n          } else {\r\n            // 当往后排时，替换的元素往后挪\r\n            for (let i = key; i < currentKey; i++) {\r\n              moveInfo.push({\r\n                from: i,\r\n                to: i - 1,\r\n                translate: { ...this.domToPosition(this.positions[i], this.positions[i + 1]) }\r\n              });\r\n            }\r\n          }\r\n          moveInfo.forEach((move) => {\r\n            const cur = this.positions[move.from];\r\n            if (move.moving) cur.moving = move.moving;\r\n            cur.translate = cur.translate;\r\n          });\r\n          // 排序动作\r\n          this.resetQueneDom();\r\n          // 重新对positions进行排序\r\n          this.currentKey = key;\r\n          this.resetPositions();\r\n          console.log(this.positions);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 移动一个元素到后一个的位置\r\n   */\r\n  domToPosition(p1, p2) {\r\n    const x = p2.left + p2.translate.x - p1.left - p1.translate.x;\r\n    const y = p2.top + p2.translate.y - p1.top - p1.translate.y;\r\n    return {\r\n      x,\r\n      y\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 针对重新排的position设置位置\r\n   * 注：dom顺序不变，绝对定位变了\r\n   */\r\n  resetQueneDom() {\r\n    const currentKey = this.currentKey;\r\n    this.positions.forEach((position, key) => {\r\n      if (currentKey === key) return;\r\n      const dom = this.domList[position.key];\r\n      const translate = position.translate;\r\n      const style = `\r\n        transform:translate(${translate.x}px, ${translate.y}px);\r\n      `;\r\n      dom.setAttribute(\r\n        'style',\r\n        `${style}\r\n        transition: all 0.5s;\r\n      `\r\n      );\r\n      setTimeout(() => {\r\n        dom.setAttribute('style', style);\r\n      }, 500);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 重新对positions进行排序\r\n   * 首先根据纵坐标排序，再进行横坐标排序\r\n   * 排序方式，从小到大\r\n   */\r\n  resetPositions() {\r\n    this.positions = this.positions.sort(function (a, b) {\r\n      const ayx =\r\n        ('0000000000' + (a.top + a.translate.y)).slice(-10) +\r\n        ('0000000000' + (a.left + a.translate.x)).slice(-10);\r\n      const byx =\r\n        ('0000000000' + (b.top + b.translate.y)).slice(-10) +\r\n        ('0000000000' + (b.left + b.translate.x)).slice(-10);\r\n      return ayx > byx ? 1 : -1;\r\n    });\r\n  }\r\n}\r\n"],"names":["types","openLog","type","printLog","message","undefined","console","log","ASSERT_MOVE","ASSERT_PRESS","MouseHandler","options","el","Node","Error","$options","initData","document","addEventListener","mousedown","bind","mousemove","mouseup","scene","action","downtime","uptime","startCoor","x","y","moveCoor","endCoor","stop","e","stopPropagation","setAction","Date","getTime","setTimeout","assertPressOrMove","isPress","setScene","press","pressDelay","move","during","click","pressEnd","eventOver","_x","Math","abs","_y","isMove","over","UseMoveList","currentDom","currentKey","moveTimer","domList","Array","prototype","map","call","querySelectorAll","item","initMouse","scrollBody","initDomList","start","end","moveTimerHandler","setMovePosition","moveOver","positions","dom","key","parent","parentElement","top","offsetTop","left","offsetLeft","width","clientWidth","height","clientHeight","unid","getAttribute","scopeX","scopeY","translate","resetPositions","findElement","path","setDomPosition","forEach","findIndex","v","Number","moveX","moveY","currentXY","moving","setAttribute","clearTimeout","setFreeElement","style","position","resetQuene","currentTranslate","currentX","currentY","moveInfo","push","from","to","domToPosition","i","cur","resetQueneDom","p1","p2","sort","a","b","ayx","slice","byx"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAO,IAAMA,KAAK,GAAG,EAAd;EAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAU;EAC/BF,EAAAA,KAAK,CAACE,IAAD,CAAL,GAAc,IAAd;EACD,CAFM;EAQA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,OAAD,EAAUF,IAAV,EAAmB;EACzC,MAAIF,KAAK,CAACE,IAAD,CAAL,IAAeA,IAAI,KAAKG,SAA5B,EAAuC;EACrCC,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;EACD;EACF,CAJM;;ECRPH,OAAO,CAAC,eAAD,CAAP;EAUA,IAAMO,WAAW,GAAG,EAApB;;EACA,IAAMC,YAAY,GAAG,GAArB;EAEA;;MACqBC;EACnB,wBAAYC,OAAZ,EAAqB;EAAA;;EACnB,QAAIA,OAAO,CAACC,EAAR,YAAsBC,IAA1B,EAAgC,KAAKD,EAAL,GAAUD,OAAO,CAACC,EAAlB,CAAhC,KACK,MAAME,KAAK,CAAC,sBAAD,CAAX;EACL,SAAKC,QAAL,GAAgBJ,OAAhB,CAHmB;;EAInB,SAAKK,QAAL;EACA;;;;;;;;;;;;;;EAaAC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuC,KAAKC,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAvC;EACAH,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuC,KAAKG,SAAL,CAAeD,IAAf,CAAoB,IAApB,CAAvC,EAnBmB;;EAqBnBH,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqC,KAAKI,OAAL,CAAaF,IAAb,CAAkB,IAAlB,CAArC;EACD;;;;;iCAGU;EACT,WAAKG,KAAL,GAAa,IAAb,CADS;;EAET,WAAKC,MAAL,GAAc,IAAd,CAFS;;EAGT,WAAKC,QAAL,GAAgB,CAAhB,CAHS;;EAIT,WAAKC,MAAL,GAAc,CAAd,CAJS;;EAKT,WAAKC,SAAL,GAAiB;EAAEC,QAAAA,CAAC,EAAE,CAAL;EAAQC,QAAAA,CAAC,EAAE;EAAX,OAAjB,CALS;;EAMT,WAAKC,QAAL,GAAgB;EAAEF,QAAAA,CAAC,EAAE,CAAL;EAAQC,QAAAA,CAAC,EAAE;EAAX,OAAhB,CANS;;EAOT,WAAKE,OAAL,GAAe;EAAEH,QAAAA,CAAC,EAAE,CAAL;EAAQC,QAAAA,CAAC,EAAE;EAAX,OAAf,CAPS;;EAQT,WAAKG,IAAL,GAAY,KAAZ;EACD;;;;gCAGSC,GAAG;EAAA;;EACX,UAAI,KAAKD,IAAT,EAAeC,CAAC,CAACC,eAAF;EACf,WAAKC,SAAL,CAAe,MAAf,EAFW;;EAGX,WAAKV,QAAL,GAAgB,IAAIW,IAAJ,GAAWC,OAAX,EAAhB;EACA,WAAKV,SAAL,GAAiB;EAAEC,QAAAA,CAAC,EAAEK,CAAC,CAACL,CAAP;EAAUC,QAAAA,CAAC,EAAEI,CAAC,CAACJ;EAAf,OAAjB;EACAS,MAAAA,UAAU,CAAC,YAAM;EACf;EACAnC,QAAAA,QAAQ,CAAC,mCAAmC,KAAI,CAACqB,MAAzC,EAAiD,eAAjD,CAAR;;EACA,YAAI,KAAI,CAACA,MAAL,IAAe,KAAI,CAACA,MAAL,KAAgB,IAA/B,IAAuC,KAAI,CAACe,iBAAL,GAAyBC,OAApE,EAA6E;EAC3E,UAAA,KAAI,CAACC,QAAL,CAAc,OAAd;;EACA,cAAI,OAAO,KAAI,CAACC,KAAZ,KAAsB,UAA1B,EAAsC,KAAI,CAACA,KAAL,CAAWT,CAAX;EACvC;EACF,OAPS,EAOP,KAAKlB,QAAL,CAAc4B,UAAd,IAA4BlC,YAPrB,CAAV;EAQD;;;;gCAGSwB,GAAG;EACX,UAAI,KAAKD,IAAT,EAAeC,CAAC,CAACC,eAAF;EACf,WAAKJ,QAAL,GAAgB;EAAEF,QAAAA,CAAC,EAAEK,CAAC,CAACL,CAAP;EAAUC,QAAAA,CAAC,EAAEI,CAAC,CAACJ;EAAf,OAAhB,CAFW;;EAIX,UAAI,OAAO,KAAKe,IAAZ,KAAqB,UAAzB,EAAqC,KAAKA,IAAL,CAAUX,CAAV,EAAa,KAAKN,SAAlB,EAA6B,KAAKG,QAAlC;EACtC;;;;8BAGOG,GAAG;EACT,UAAI,KAAKD,IAAT,EAAeC,CAAC,CAACC,eAAF;EACf,WAAKC,SAAL,CAAe,IAAf,EAFS;;EAGT,WAAKT,MAAL,GAAc,IAAIU,IAAJ,GAAWC,OAAX,EAAd;EACA,UAAMQ,MAAM,GAAG,KAAKnB,MAAL,GAAc,KAAKD,QAAlC;EACA,WAAKM,OAAL,GAAe;EAAEH,QAAAA,CAAC,EAAEK,CAAC,CAACL,CAAP;EAAUC,QAAAA,CAAC,EAAEI,CAAC,CAACJ;EAAf,OAAf,CALS;;EAOT,UAAIgB,MAAM,KAAK,KAAK9B,QAAL,CAAc4B,UAAd,IAA4BlC,YAAjC,CAAV,EAA0D;EACxD,aAAKgC,QAAL,CAAc,OAAd;EACA,YAAI,OAAO,KAAKK,KAAZ,KAAsB,UAA1B,EAAsC,KAAKA,KAAL,CAAWb,CAAX;EACvC,OAHD,MAGO,IAAI,KAAKM,iBAAL,GAAyBC,OAA7B,EAAsC;EAC3C,aAAKC,QAAL,CAAc,UAAd;EACA,YAAI,OAAO,KAAKM,QAAZ,KAAyB,UAA7B,EAAyC,KAAKA,QAAL,CAAcd,CAAd;EAC1C;;EACD,WAAKe,SAAL;EACD;;;;0CAGmB;EAClB,UAAMC,EAAE,GAAGC,IAAI,CAACC,GAAL,CAAS,KAAKxB,SAAL,CAAeC,CAAf,GAAmB,KAAKE,QAAL,CAAcF,CAA1C,CAAX;;EACA,UAAMwB,EAAE,GAAGF,IAAI,CAACC,GAAL,CAAS,KAAKxB,SAAL,CAAeE,CAAf,GAAmB,KAAKC,QAAL,CAAcD,CAA1C,CAAX;;EACA,UAAIW,OAAO,GAAG,KAAd;;EACA,UAAIS,EAAE,IAAIzC,WAAN,IAAqB4C,EAAE,IAAI5C,WAA/B,EAA4C;EAC1CgC,QAAAA,OAAO,GAAG,IAAV;EACD;;EACD,aAAO;EAAEA,QAAAA,OAAO,EAAPA,OAAF;EAAWa,QAAAA,MAAM,EAAE,CAACb;EAApB,OAAP;EACD;;;;+BAGQjB,OAAO;EACdpB,MAAAA,QAAQ,CAAC,0BAA0BoB,KAA3B,EAAkC,eAAlC,CAAR;EACA,WAAKA,KAAL,GAAaA,KAAb;EACD;;;;gCAGSC,QAAQ;EAChBrB,MAAAA,QAAQ,CAAC,0BAA0BqB,MAA3B,EAAmC,eAAnC,CAAR;EACA,WAAKA,MAAL,GAAcA,MAAd;EACD;;;;gCAGSS,GAAG;EACX,UAAI,OAAO,KAAKqB,IAAZ,KAAqB,UAAzB,EAAqC,KAAKA,IAAL,CAAUrB,CAAV;EACrC,WAAKjB,QAAL;EACD;;;;;;ECvHHf,OAAO,CAAC,YAAD,CAAP;;MAEqBsD;EACnB;;;;;;EAMA,uBAAY5C,OAAZ,EAAqB;EAAA;;EACnB;;;;EAIA,QAAIA,OAAO,CAACC,EAAR,YAAsBC,IAA1B,EAAgC,KAAKD,EAAL,GAAUD,OAAO,CAACC,EAAlB,CAAhC,KACK,MAAME,KAAK,CAAC,sBAAD,CAAX;EACL,SAAK0C,UAAL,GAAkB,IAAlB,CAPmB;;EAQnB,SAAKC,UAAL,GAAkB,IAAlB,CARmB;EASnB;;EACA,SAAKC,SAAL,GAAiB,IAAjB;EACA;;;;;EAIA,QAAI/C,OAAO,CAACgD,OAAR,YAA2BC,KAA/B,EAAsC;EACpC,WAAKD,OAAL,GAAehD,OAAO,CAACgD,OAAvB;EACD,KAFD,MAEO;EACL,WAAKA,OAAL,GAAeC,KAAK,CAACC,SAAN,CAAgBC,GAAhB,CAAoBC,IAApB,CACb,KAAKnD,EAAL,CAAQoD,gBAAR,CAAyB,mBAAzB,CADa,EAEb,UAACC,IAAD;EAAA,eAAUA,IAAV;EAAA,OAFa,CAAf;EAID;;EACD,WAAOtD,OAAO,CAACgD,OAAf;EACA;;;;EAGA,SAAKO,SAAL,CAAevD,OAAf;EACD;;;;gCAESA,SAAS;EAAA;;EACjB,UAAI+B,KAAK,GAAG,KAAZ;EACA,WAAKyB,UAAL,GAAkB,IAAIzD,YAAJ,CAAiBC,OAAjB,CAAlB,CAFiB;;EAIjB,WAAKwD,UAAL,CAAgBzB,KAAhB,GAAwB,UAACT,CAAD,EAAO;EAC7BS,QAAAA,KAAK,GAAG,IAAR;EACA,QAAA,KAAI,CAACyB,UAAL,CAAgBnC,IAAhB,GAAuB,IAAvB;;EACA,QAAA,KAAI,CAACoC,WAAL,CAAiBnC,CAAjB,EAH6B;;EAI9B,OAJD,CAJiB;;;EAUjB,WAAKkC,UAAL,CAAgBvB,IAAhB,GAAuB,UAACX,CAAD,EAAIoC,KAAJ,EAAWC,GAAX,EAAmB;EACxC;EACA,YAAI5B,KAAJ,EAAW;EACT,UAAA,KAAI,CAAC6B,gBAAL;;EACA,UAAA,KAAI,CAACC,eAAL,CAAqBH,KAArB,EAA4BC,GAA5B;EACD;EACF,OAND,CAViB;;;EAkBjB,WAAKH,UAAL,CAAgBb,IAAhB,GAAuB,UAACrB,CAAD,EAAO;EAC5B,YAAIS,KAAJ,EAAW;EACT;EACA,UAAA,KAAI,CAAC+B,QAAL;EACD;;EACD/B,QAAAA,KAAK,GAAG,KAAR;EACA,QAAA,KAAI,CAACyB,UAAL,CAAgBnC,IAAhB,GAAuB,KAAvB;EACD,OAPD;EAQD;EAED;;;;;;kCAGYC,GAAG;EACb;;;EAGA,UAAI,CAAC,KAAKyC,SAAV,EAAqB;EACnB,aAAKA,SAAL,GAAiB,KAAKf,OAAL,CAAaG,GAAb,CAAiB,UAACa,GAAD,EAAMC,GAAN,EAAc;EAC9C,cAAMC,MAAM,GAAGF,GAAG,CAACG,aAAnB;EACA,cAAMC,GAAG,GAAGF,MAAM,CAACG,SAAnB;EACA,cAAMC,IAAI,GAAGJ,MAAM,CAACK,UAApB;EACA,cAAMC,KAAK,GAAGR,GAAG,CAACS,WAAlB;EACA,cAAMC,MAAM,GAAGV,GAAG,CAACW,YAAnB;EACA,cAAMC,IAAI,GAAGZ,GAAG,CAACa,YAAJ,CAAiB,MAAjB,CAAb;EACA,iBAAO;EACLD,YAAAA,IAAI,EAAJA,IADK;EAELX,YAAAA,GAAG,EAAHA,GAFK;EAGLG,YAAAA,GAAG,EAAHA,GAHK;EAILE,YAAAA,IAAI,EAAJA,IAJK;EAKLE,YAAAA,KAAK,EAALA,KALK;EAMLE,YAAAA,MAAM,EAANA,MANK;EAOLI,YAAAA,MAAM,EAAE,CAACR,IAAD,EAAOA,IAAI,GAAGE,KAAd,CAPH;EAQLO,YAAAA,MAAM,EAAE,CAACX,GAAD,EAAMA,GAAG,GAAGM,MAAZ,CARH;EASLM,YAAAA,SAAS,EAAE;EACT/D,cAAAA,CAAC,EAAE,CADM;EAETC,cAAAA,CAAC,EAAE;EAFM;EATN,WAAP;EAcD,SArBgB,CAAjB;EAsBA,aAAK+D,cAAL;EACD;;EACD,WAAKC,WAAL,CAAiB5D,CAAC,CAAC6D,IAAnB;EACA,WAAKC,cAAL;EACD;EAED;;;;;;kCAGYD,MAAM;EAAA;;EAChBA,MAAAA,IAAI,CAACE,OAAL,CAAa,UAACrB,GAAD,EAAMC,GAAN,EAAc;EACzB,YAAID,GAAG,CAACa,YAAJ,IAAoBb,GAAG,CAACa,YAAJ,CAAiB,MAAjB,MAA6B,YAArD,EAAmE;EACjE,UAAA,MAAI,CAAChC,UAAL,GAAkBmB,GAAlB;EACA,UAAA,MAAI,CAAClB,UAAL,GAAkB,MAAI,CAACiB,SAAL,CAAeuB,SAAf,CAChB,UAACC,CAAD;EAAA,mBAAOA,CAAC,CAACtB,GAAF,KAAUuB,MAAM,CAACxB,GAAG,CAACa,YAAJ,CAAiB,YAAjB,CAAD,CAAvB;EAAA,WADgB,CAAlB;EAGD;EACF,OAPD;EAQD;EAED;;;;;;sCAGgBnB,OAAOC,KAAK;EAC1B,UAAM8B,KAAK,GAAG9B,GAAG,CAAC1C,CAAJ,GAAQyC,KAAK,CAACzC,CAA5B;EACA,UAAMyE,KAAK,GAAG/B,GAAG,CAACzC,CAAJ,GAAQwC,KAAK,CAACxC,CAA5B;EACA,UAAMyE,SAAS,GAAG,KAAK5B,SAAL,CAAe,KAAKjB,UAApB,CAAlB;EACA,UAAMkC,SAAS,GAAGW,SAAS,CAACC,MAAV,IAAoBD,SAAS,CAACX,SAAhD;EACAW,MAAAA,SAAS,CAACF,KAAV,GAAkBA,KAAlB;EACAE,MAAAA,SAAS,CAACD,KAAV,GAAkBA,KAAlB;EACA,WAAK7C,UAAL,CAAgBgD,YAAhB,CACE,OADF,wHAOwBb,SAAS,CAAC/D,CAAV,GAAcwE,KAPtC,iBAOkDT,SAAS,CAAC9D,CAAV,GAAcwE,KAPhE;EAWD;EAED;;;;;;iCAGW;EACT,UAAI,KAAK3C,SAAT,EAAoB+C,YAAY,CAAC,KAAK/C,SAAN,CAAZ;EACpB,WAAKgD,cAAL;EACD;EAED;;;;;;uCAGiB;EACf,UAAMJ,SAAS,GAAG,KAAK5B,SAAL,CAAe,KAAKjB,UAApB,CAAlB;EACA,UAAMkC,SAAS,GAAGW,SAAS,CAACX,SAA5B;EACA,WAAKnC,UAAL,CAAgBgD,YAAhB,CACE,OADF,wHAOwBb,SAAS,CAAC/D,CAPlC,iBAO0C+D,SAAS,CAAC9D,CAPpD;EAWD;EAED;;;;;;uCAGiB;EAAA;;EACf,UAAMyE,SAAS,GAAG,KAAK5B,SAAL,CAAe,KAAKjB,UAApB,CAAlB;EACA,UAAMkC,SAAS,GAAGW,SAAS,CAACX,SAA5B;EACA,aAAOW,SAAS,CAACC,MAAjB;EACA,UAAMI,KAAK,yCACahB,SAAS,CAAC/D,CADvB,iBAC+B+D,SAAS,CAAC9D,CADzC,eAAX;EAGA,WAAK2B,UAAL,CAAgBgD,YAAhB,CACE,OADF,oBAGIG,KAHJ;EAYArE,MAAAA,UAAU,CAAC,YAAM;EACf,QAAA,MAAI,CAACkB,UAAL,CAAgBgD,YAAhB,CAA6B,OAA7B,EAAsCG,KAAtC;EACD,OAFS,EAEP,GAFO,CAAV;EAGD;EAED;;;;;;uCAGiBC,UAAU;EAAA;;EACzB,UAAI,KAAKlD,SAAT,EAAoB+C,YAAY,CAAC,KAAK/C,SAAN,CAAZ;EACpB,WAAKA,SAAL,GAAiBpB,UAAU,CAAC,YAAM;EAChC,QAAA,MAAI,CAACuE,UAAL;EACD,OAF0B,EAExB,GAFwB,CAA3B;EAGD;EAED;;;;;;mCAGa;EAAA;;EACX,UAAMP,SAAS,GAAG,KAAK5B,SAAL,CAAe,KAAKjB,UAApB,CAAlB;EACA,UAAMqD,gBAAgB,GAAGR,SAAS,CAACC,MAAV,IAAoBD,SAAS,CAACX,SAAvD;EACA,UAAMoB,QAAQ,GAAGT,SAAS,CAACrB,IAAV,GAAiBqB,SAAS,CAACF,KAA3B,GAAmCU,gBAAgB,CAAClF,CAArE;EACA,UAAMoF,QAAQ,GAAGV,SAAS,CAACvB,GAAV,GAAgBuB,SAAS,CAACD,KAA1B,GAAkCS,gBAAgB,CAACjF,CAApE;EACA,UAAM4B,UAAU,GAAG,KAAKA,UAAxB;EACA,WAAKiB,SAAL,CAAesB,OAAf,CAAuB,UAACY,QAAD,EAAWhC,GAAX,EAAmB;EACxC,YAAInB,UAAU,KAAKmB,GAAnB,EAAwB;EACtB,cAAMe,SAAS,GAAGiB,QAAQ,CAACjB,SAA3B;;EACA,cAAM1C,EAAE,GAAGC,IAAI,CAACC,GAAL,CAASyD,QAAQ,CAAC3B,IAAT,GAAgBU,SAAS,CAAC/D,CAA1B,GAA8BmF,QAAvC,CAAX;;EACA,cAAM3D,EAAE,GAAGF,IAAI,CAACC,GAAL,CAASyD,QAAQ,CAAC7B,GAAT,GAAeY,SAAS,CAAC9D,CAAzB,GAA6BmF,QAAtC,CAAX;;EACA,cAAI/D,EAAE,IAAI,EAAN,IAAYG,EAAE,IAAI,EAAtB,EAA0B;EACxBjD,YAAAA,QAAQ,CAAC,UAAU,MAAI,CAACsD,UAAf,GAA4B,UAA5B,GAAyCmB,GAA1C,EAA+C,YAA/C,CAAR,CADwB;;EAGxB;;EACA,gBAAIqC,QAAQ,GAAG,EAAf;EACAA,YAAAA,QAAQ,CAACC,IAAT,CAAc;EACZC,cAAAA,IAAI,EAAE1D,UADM;EAEZ2D,cAAAA,EAAE,EAAExC,GAFQ;EAGZe,cAAAA,SAAS,qBAAO,MAAI,CAAC0B,aAAL,CAAmB,MAAI,CAAC3C,SAAL,CAAejB,UAAf,CAAnB,EAA+C,MAAI,CAACiB,SAAL,CAAeE,GAAf,CAA/C,CAAP,CAHG;EAIZ2B,cAAAA,MAAM,qBAAO,MAAI,CAAC7B,SAAL,CAAejB,UAAf,EAA2BkC,SAAlC;EAJM,aAAd;;EAMA,gBAAIlC,UAAU,GAAGmB,GAAjB,EAAsB;EACpB,mBAAK,IAAI0C,CAAC,GAAG7D,UAAU,GAAG,CAA1B,EAA6B6D,CAAC,IAAI1C,GAAlC,EAAuC0C,CAAC,EAAxC,EAA4C;EAC1CL,gBAAAA,QAAQ,CAACC,IAAT,CAAc;EACZC,kBAAAA,IAAI,EAAEG,CADM;EAEZF,kBAAAA,EAAE,EAAEE,CAAC,GAAG,CAFI;EAGZ3B,kBAAAA,SAAS,qBAAO,MAAI,CAAC0B,aAAL,CAAmB,MAAI,CAAC3C,SAAL,CAAe4C,CAAf,CAAnB,EAAsC,MAAI,CAAC5C,SAAL,CAAe4C,CAAC,GAAG,CAAnB,CAAtC,CAAP;EAHG,iBAAd;EAKD;EACF,aARD,MAQO;EACL;EACA,mBAAK,IAAIA,EAAC,GAAG1C,GAAb,EAAkB0C,EAAC,GAAG7D,UAAtB,EAAkC6D,EAAC,EAAnC,EAAuC;EACrCL,gBAAAA,QAAQ,CAACC,IAAT,CAAc;EACZC,kBAAAA,IAAI,EAAEG,EADM;EAEZF,kBAAAA,EAAE,EAAEE,EAAC,GAAG,CAFI;EAGZ3B,kBAAAA,SAAS,qBAAO,MAAI,CAAC0B,aAAL,CAAmB,MAAI,CAAC3C,SAAL,CAAe4C,EAAf,CAAnB,EAAsC,MAAI,CAAC5C,SAAL,CAAe4C,EAAC,GAAG,CAAnB,CAAtC,CAAP;EAHG,iBAAd;EAKD;EACF;;EACDL,YAAAA,QAAQ,CAACjB,OAAT,CAAiB,UAACpD,IAAD,EAAU;EACzB,kBAAM2E,GAAG,GAAG,MAAI,CAAC7C,SAAL,CAAe9B,IAAI,CAACuE,IAApB,CAAZ;EACA,kBAAIvE,IAAI,CAAC2D,MAAT,EAAiBgB,GAAG,CAAChB,MAAJ,GAAa3D,IAAI,CAAC2D,MAAlB;EACjBgB,cAAAA,GAAG,CAAC5B,SAAJ,GAAgB4B,GAAG,CAAC5B,SAApB;EACD,aAJD,EA7BwB;;EAmCxB,YAAA,MAAI,CAAC6B,aAAL,GAnCwB;;;EAqCxB,YAAA,MAAI,CAAC/D,UAAL,GAAkBmB,GAAlB;;EACA,YAAA,MAAI,CAACgB,cAAL;;EACAtF,YAAAA,OAAO,CAACC,GAAR,CAAY,MAAI,CAACmE,SAAjB;EACD;EACF;EACF,OA/CD;EAgDD;EAED;;;;;;oCAGc+C,IAAIC,IAAI;EACpB,UAAM9F,CAAC,GAAG8F,EAAE,CAACzC,IAAH,GAAUyC,EAAE,CAAC/B,SAAH,CAAa/D,CAAvB,GAA2B6F,EAAE,CAACxC,IAA9B,GAAqCwC,EAAE,CAAC9B,SAAH,CAAa/D,CAA5D;EACA,UAAMC,CAAC,GAAG6F,EAAE,CAAC3C,GAAH,GAAS2C,EAAE,CAAC/B,SAAH,CAAa9D,CAAtB,GAA0B4F,EAAE,CAAC1C,GAA7B,GAAmC0C,EAAE,CAAC9B,SAAH,CAAa9D,CAA1D;EACA,aAAO;EACLD,QAAAA,CAAC,EAADA,CADK;EAELC,QAAAA,CAAC,EAADA;EAFK,OAAP;EAID;EAED;;;;;;;sCAIgB;EAAA;;EACd,UAAM4B,UAAU,GAAG,KAAKA,UAAxB;EACA,WAAKiB,SAAL,CAAesB,OAAf,CAAuB,UAACY,QAAD,EAAWhC,GAAX,EAAmB;EACxC,YAAInB,UAAU,KAAKmB,GAAnB,EAAwB;EACxB,YAAMD,GAAG,GAAG,MAAI,CAAChB,OAAL,CAAaiD,QAAQ,CAAChC,GAAtB,CAAZ;EACA,YAAMe,SAAS,GAAGiB,QAAQ,CAACjB,SAA3B;EACA,YAAMgB,KAAK,2CACahB,SAAS,CAAC/D,CADvB,iBAC+B+D,SAAS,CAAC9D,CADzC,iBAAX;EAGA8C,QAAAA,GAAG,CAAC6B,YAAJ,CACE,OADF,YAEKG,KAFL;EAMArE,QAAAA,UAAU,CAAC,YAAM;EACfqC,UAAAA,GAAG,CAAC6B,YAAJ,CAAiB,OAAjB,EAA0BG,KAA1B;EACD,SAFS,EAEP,GAFO,CAAV;EAGD,OAhBD;EAiBD;EAED;;;;;;;;uCAKiB;EACf,WAAKjC,SAAL,GAAiB,KAAKA,SAAL,CAAeiD,IAAf,CAAoB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;EACnD,YAAMC,GAAG,GACP,CAAC,gBAAgBF,CAAC,CAAC7C,GAAF,GAAQ6C,CAAC,CAACjC,SAAF,CAAY9D,CAApC,CAAD,EAAyCkG,KAAzC,CAA+C,CAAC,EAAhD,IACA,CAAC,gBAAgBH,CAAC,CAAC3C,IAAF,GAAS2C,CAAC,CAACjC,SAAF,CAAY/D,CAArC,CAAD,EAA0CmG,KAA1C,CAAgD,CAAC,EAAjD,CAFF;EAGA,YAAMC,GAAG,GACP,CAAC,gBAAgBH,CAAC,CAAC9C,GAAF,GAAQ8C,CAAC,CAAClC,SAAF,CAAY9D,CAApC,CAAD,EAAyCkG,KAAzC,CAA+C,CAAC,EAAhD,IACA,CAAC,gBAAgBF,CAAC,CAAC5C,IAAF,GAAS4C,CAAC,CAAClC,SAAF,CAAY/D,CAArC,CAAD,EAA0CmG,KAA1C,CAAgD,CAAC,EAAjD,CAFF;EAGA,eAAOD,GAAG,GAAGE,GAAN,GAAY,CAAZ,GAAgB,CAAC,CAAxB;EACD,OARgB,CAAjB;EASD;;;;;;;;;;;;"}