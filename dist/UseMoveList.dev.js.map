{"version":3,"file":"UseMoveList.dev.js","sources":["../src/core/mouse-handler.js","../src/core/move-block.js"],"sourcesContent":["// 事件\r\nconst EVENT_TYPE = {\r\n  click: 'click', // 点击事件\r\n  press: 'press', // 长按事件\r\n  pressEnd: 'pressEnd', // 长按结束\r\n  move: 'move' // 拖拽\r\n  // 放入插件去判断\r\n  // toTop: 'toTop', // 上滑\r\n  // toBottom: 'toBottom', // 下滑\r\n  // leftToRight: 'leftToRight', // 左->右\r\n  // rightToleft: 'rightToleft', // 右->左\r\n  // topEdge: 'topEdge', // 顶部边缘下滑\r\n  // bottomEdge: 'bottomEdge', // 底部边缘上滑\r\n  // leftEdge: 'leftEdge', // 左边缘右滑\r\n  // rightEdge: 'rightEdge', // 右边缘左滑\r\n};\r\n\r\nconst ASSERT_MOVE = 20; // 断言长按与移动,px\r\nconst ASSERT_PRESS = 300; // 断言点击长按,ms\r\n\r\n// 监听一个元素内的鼠标事件\r\nexport default class MouseHandler {\r\n  constructor(options) {\r\n    if (options.el instanceof Node) this.el = options.el;\r\n    else throw Error('el must be a Element');\r\n    this.$options = options; // 内含一系列钩子\r\n    this.initData();\r\n    /*\r\n     * 每次鼠标动作都有3个状态\r\n     * 按下、移动、抬起（down，move，up）\r\n     * 通过分析动作，确定鼠标操作的场景，并抛出一系列的钩子\r\n     * --------------------\r\n     * 场景包括:\r\n     * 点击 * 长按 * 移动 * 上滑 * 下滑 * 左->右 * 右->左 * 顶部边缘下滑 * 底部边缘上滑 * 左边缘右滑 * 右边缘左滑\r\n     * --------------------\r\n     * 钩子包括:\r\n     * click * press * pressEnd * toTop * toBottom * leftToRight * rightToleft * topEdge * bottomEdge * leftEdge * rightEdge\r\n     * --------------------\r\n     * 现在先分析 长按->拖拽 场景\r\n     * */\r\n    this.el.addEventListener('mousedown', this.mousedown.bind(this));\r\n    this.el.addEventListener('mousemove', this.mousemove.bind(this));\r\n    // this.el.addEventListener('mouseup', this.mouseup.bind(this));\r\n    document.addEventListener('mouseup', this.mouseup.bind(this));\r\n  }\r\n\r\n  // 初始化值\r\n  initData() {\r\n    this.scene = null; // 当前动作场景\r\n    this.action = null; // 动作状态\r\n    this.downtime = 0; // 按下时的时间\r\n    this.uptime = 0; //抬起的时间\r\n    this.startCoor = { x: 0, y: 0 }; // 按下时鼠标位置\r\n    this.moveCoor = { x: 0, y: 0 }; // 移动时鼠标位置\r\n    this.endCoor = { x: 0, y: 0 }; // 放开时时鼠标位置\r\n    this.stop = false;\r\n  }\r\n\r\n  // 鼠标按下\r\n  mousedown(e) {\r\n    if (this.stop) e.stopPropagation();\r\n    this.setAction('down'); // 鼠标按下\r\n    this.downtime = new Date().getTime();\r\n    this.startCoor = { x: e.x, y: e.y };\r\n    setTimeout(() => {\r\n      // 当超过断言值时\r\n      console.log('action------------------------' + this.action);\r\n      if (this.action && this.action !== 'up' && this.assertPressOrMove().isPress) {\r\n        this.setScene('press');\r\n        if (typeof this.press === 'function') this.press(e);\r\n      }\r\n    }, this.$options.pressDelay || ASSERT_PRESS);\r\n  }\r\n\r\n  // 鼠标移动\r\n  mousemove(e) {\r\n    if (this.stop) e.stopPropagation();\r\n    this.moveCoor = { x: e.x, y: e.y };\r\n    // this.setAction('move'); // 鼠标按下\r\n    if (typeof this.move === 'function') this.move(e, this.startCoor, this.moveCoor);\r\n  }\r\n\r\n  // 鼠标抬起\r\n  mouseup(e) {\r\n    if (this.stop) e.stopPropagation();\r\n    this.setAction('up'); // 鼠标按下\r\n    this.uptime = new Date().getTime();\r\n    const during = this.uptime - this.downtime;\r\n    this.endCoor = { x: e.x, y: e.y };\r\n    // 断言是点击还是长按：scene未被设置，且点击间隔少于 ASSERT_PRESS\r\n    if (during <= (this.$options.pressDelay || ASSERT_PRESS)) {\r\n      this.setScene('click');\r\n      if (typeof this.click === 'function') this.click(e);\r\n    } else if (this.assertPressOrMove().isPress) {\r\n      this.setScene('pressEnd');\r\n      if (typeof this.pressEnd === 'function') this.pressEnd(e);\r\n    }\r\n    this.eventOver();\r\n  }\r\n\r\n  // 断言当前是长按还是移动，\r\n  assertPressOrMove() {\r\n    const _x = Math.abs(this.startCoor.x - this.moveCoor.x);\r\n    const _y = Math.abs(this.startCoor.y - this.moveCoor.y);\r\n    let isPress = false;\r\n    if (_x <= ASSERT_MOVE && _y <= ASSERT_MOVE) {\r\n      isPress = true;\r\n    }\r\n    return { isPress, isMove: !isPress };\r\n  }\r\n\r\n  // 设置当前场景\r\n  setScene(scene) {\r\n    console.log('---------------------' + scene);\r\n    this.scene = scene;\r\n  }\r\n\r\n  // 设置当前动作\r\n  setAction(action) {\r\n    console.log('---------------------' + action);\r\n    this.action = action;\r\n  }\r\n\r\n  // 一个事件的结束\r\n  eventOver(e) {\r\n    if (typeof this.over === 'function') this.over(e);\r\n    this.initData();\r\n  }\r\n}\r\n","import MouseHandler from './mouse-handler';\r\n\r\nexport default class UseMoveList {\r\n  /*\r\n   * options只需要传入 id, wrapHeight: 480, domWidth: 480, domHeight: Y, direction: 'y',\r\n   * id元素布局必需是非static，内部项的style尽量为null\r\n   * 所有移动块上需设置name=\"move-block\" :move-index=\"key\"\r\n   * 当进行布局时，将会是一个非常耗费性能的操作\r\n   * */\r\n  constructor(options) {\r\n    /*\r\n     * 这里仅获取当前调用组件内的元素\r\n     * 若是其他地方有重复组件（如首屏滑块），需要将排序数据存入store\r\n     * */\r\n    if (options.el instanceof Node) this.el = options.el;\r\n    else throw Error('el must be a Element');\r\n    this.currentDom = null; // 当前变动位置的元素\r\n    this.currentKey = null; // 当前变动位置的元素索引\r\n    // 移动中排序定时器\r\n    this.moveTimer = null;\r\n    // 移动排序后调整鼠标移动值\r\n    this.startELP = null;\r\n    this.fixMouseX = 0;\r\n    this.fixMouseY = 0;\r\n    /*\r\n     * 设置需要进行排序的doms\r\n     * 若是没有传入domlist，将会去wrap内的子元素\r\n     * */\r\n    if (options.domList instanceof Array) {\r\n      this.domList = options.domList;\r\n    } else {\r\n      this.domList = Array.prototype.map.call(this.el.children, (item) => item);\r\n    }\r\n    delete options.domList;\r\n    /*\r\n     * 实例化鼠标事件\r\n     * */\r\n    this.initMouse(options);\r\n  }\r\n\r\n  initMouse(options) {\r\n    let press = false;\r\n    this.scrollBody = new MouseHandler(options);\r\n    this.scrollBody.press = (e) => {\r\n      press = true;\r\n      this.scrollBody.stop = true;\r\n      this.findElement(e.path);\r\n      this.initDomList(); // 初始化DomList\r\n    };\r\n    this.scrollBody.move = (e, start, end) => {\r\n      // 监听移动，并变更移动块位置\r\n      if (press) {\r\n        this.moveTimerHandler();\r\n        this.setMovePosition(start, end);\r\n      }\r\n    };\r\n    this.scrollBody.over = (e) => {\r\n      if (press) {\r\n        // 当鼠标松开时执行的方法\r\n        this.moveOver();\r\n      }\r\n      press = false;\r\n      this.scrollBody.stop = false;\r\n    };\r\n  }\r\n\r\n  /*\r\n   * 初始化元素的位置信息\r\n   * */\r\n  initDomList() {\r\n    this.positions = this.domList.map((dom, key) => {\r\n      const top = dom.offsetTop;\r\n      const left = dom.offsetLeft;\r\n      const width = dom.clientWidth;\r\n      const height = dom.clientHeight;\r\n      return {\r\n        key,\r\n        top,\r\n        left,\r\n        width,\r\n        height,\r\n        scopeX: [left, left + width],\r\n        scopeY: [top, top + height]\r\n      };\r\n    });\r\n    this.positionsCopy = [...this.positions];\r\n    const position = this.positions[this.currentKey];\r\n    this.startELP = {\r\n      top: position.top,\r\n      left: position.left\r\n    };\r\n    this.setDomPosition();\r\n  }\r\n\r\n  /*\r\n   * 找到当前选中的移动元素\r\n   * */\r\n  findElement(path) {\r\n    path.forEach((dom, key) => {\r\n      if (dom.getAttribute && dom.getAttribute('name') === 'move-block') {\r\n        this.currentDom = dom;\r\n        this.currentKey = Number(dom.getAttribute('move-index'));\r\n      }\r\n    });\r\n  }\r\n\r\n  /*\r\n   * 设置doms位置\r\n   * */\r\n  setDomPosition() {\r\n    const currentKey = this.currentKey;\r\n    setTimeout(() => {\r\n      this.domList.forEach((dom, key) => {\r\n        const postion = this.positions[key];\r\n        dom.setAttribute(\r\n          'style',\r\n          `\r\n          ${currentKey === key ? 'border:1px solid red;' : ''}\r\n          position:absolute;\r\n          top:${postion.top}px;\r\n          left:${postion.left}px;\r\n          transform:translate(0, 0);\r\n          z-index:100;\r\n        `\r\n        );\r\n      });\r\n    }, 0);\r\n  }\r\n\r\n  /*\r\n   * 设置滑动位置\r\n   * */\r\n  setMovePosition(start, end) {\r\n    const moveX = end.x - start.x + this.fixMouseX;\r\n    const moveY = end.y - start.y + this.fixMouseY;\r\n    const currentXY = this.positions[this.currentKey];\r\n    currentXY.moveX = moveX;\r\n    currentXY.moveY = moveY;\r\n    this.currentDom.setAttribute(\r\n      'style',\r\n      `\r\n      border-color:red;\r\n      position:absolute;\r\n      top:${currentXY.top}px;\r\n      left:${currentXY.left}px;\r\n      transform:translate(${moveX}px, ${moveY}px);\r\n      z-index:200;\r\n    `\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 设置松开事件\r\n   */\r\n  moveOver() {\r\n    if (this.moveTimer) clearTimeout(this.moveTimer);\r\n    this.setFreeElement();\r\n  }\r\n\r\n  /**\r\n   * 解放元素\r\n   */\r\n  setFreeElement() {\r\n    const currentXY = this.positions[this.currentKey];\r\n    const style = `\r\n      position:absolute;\r\n      top:${currentXY.top}px;\r\n      left:${currentXY.left}px;\r\n      transform:translate(0, 0);\r\n      z-index:100;\r\n    `;\r\n    this.currentDom.setAttribute(\r\n      'style',\r\n      `\r\n      ${style}\r\n      transition: all 0.5s;\r\n    `\r\n    );\r\n    setTimeout(() => {\r\n      this.currentDom.setAttribute('style', style);\r\n    }, 500);\r\n  }\r\n\r\n  /**\r\n   * 记录移动过程中的信息，并设置定时器，处理排序任务\r\n   */\r\n  moveTimerHandler(position) {\r\n    if (this.moveTimer) clearTimeout(this.moveTimer);\r\n    this.moveTimer = setTimeout(() => {\r\n      this.resetQuene();\r\n    }, 500);\r\n  }\r\n\r\n  /**\r\n   * 当鼠标停下超过500毫秒，将会判断是否触发排序\r\n   */\r\n  resetQuene() {\r\n    const currentXY = this.positions[this.currentKey];\r\n    const currentX = currentXY.left + currentXY.moveX;\r\n    const currentY = currentXY.top + currentXY.moveY;\r\n    const currentKey = this.currentKey;\r\n    this.positionsCopy.forEach((position, key) => {\r\n      if (currentKey !== key) {\r\n        const _x = Math.abs(position.left - currentX);\r\n        const _y = Math.abs(position.top - currentY);\r\n        if (_x <= 30 && _y <= 30) {\r\n          console.log('重新排序：' + this.currentKey + '---to---' + key);\r\n          delete currentXY.moveX;\r\n          delete currentXY.moveY;\r\n          const next = this.positionsCopy[key];\r\n          // 当往前排时，替换的元素往前挪\r\n          /** 对positions重新排序 **/\r\n          if (currentKey < key) {\r\n            for (let i = currentKey + 1; i <= key; i++) {\r\n              this.positions[i] = this.positionsCopy[i - 1];\r\n            }\r\n          } else {\r\n            // 当往后排时，替换的元素往后挪\r\n            for (let i = key; i < currentKey; i++) {\r\n              this.positions[i] = this.positionsCopy[i + 1];\r\n            }\r\n          }\r\n          this.positions[currentKey] = {\r\n            ...next,\r\n            ...{\r\n              moveX: currentX - next.left,\r\n              moveY: currentY - next.top\r\n            }\r\n          };\r\n          // 重置鼠标移动位置，\r\n          // 若是再次改变位置，移动位置出现\r\n          this.fixMouseX = this.startELP.left - next.left;\r\n          this.fixMouseY = this.startELP.top - next.top;\r\n          this.resetQueneDom();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 针对重新排的position设置位置\r\n   * 注：dom顺序不变，绝对定位变了\r\n   */\r\n  resetQueneDom() {\r\n    const currentKey = this.currentKey;\r\n    this.positions.forEach((position, key) => {\r\n      const dom = this.domList[key];\r\n      const style = `\r\n        ${currentKey === key ? 'border-color:red;' : ''}\r\n        position:absolute;\r\n        top:${position.top}px;\r\n        left:${position.left}px;\r\n        transform:translate(${position.moveX}px, ${position.moveY}px);\r\n        z-index:${currentKey === key ? '200' : '100'};\r\n      `;\r\n      dom.setAttribute(\r\n        'style',\r\n        `${style}\r\n        transition: all 0.5s;\r\n      `\r\n      );\r\n      setTimeout(() => {\r\n        dom.setAttribute('style', style);\r\n      }, 500);\r\n    });\r\n  }\r\n}\r\n"],"names":["ASSERT_MOVE","ASSERT_PRESS","MouseHandler","options","el","Node","Error","$options","initData","addEventListener","mousedown","bind","mousemove","document","mouseup","scene","action","downtime","uptime","startCoor","x","y","moveCoor","endCoor","stop","e","stopPropagation","setAction","Date","getTime","setTimeout","console","log","assertPressOrMove","isPress","setScene","press","pressDelay","move","during","click","pressEnd","eventOver","_x","Math","abs","_y","isMove","over","UseMoveList","currentDom","currentKey","moveTimer","startELP","fixMouseX","fixMouseY","domList","Array","prototype","map","call","children","item","initMouse","scrollBody","findElement","path","initDomList","start","end","moveTimerHandler","setMovePosition","moveOver","positions","dom","key","top","offsetTop","left","offsetLeft","width","clientWidth","height","clientHeight","scopeX","scopeY","positionsCopy","position","setDomPosition","forEach","getAttribute","Number","postion","setAttribute","moveX","moveY","currentXY","clearTimeout","setFreeElement","style","resetQuene","currentX","currentY","next","i","resetQueneDom"],"mappings":"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"}